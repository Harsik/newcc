{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tiflis\\\\Documents\\\\eGovFrameDev-4.0.0-64bit\\\\workspace\\\\newcc\\\\egovframe-template-simple-react\\\\src\\\\egov\\\\common\\\\EgovSelect.jsx\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EgovSelect(_ref) {\n  let {\n    id,\n    name,\n    title,\n    options,\n    setValue,\n    setter\n  } = _ref;\n  console.log(\"egovSelect\", id, name, title, options, setValue, setter);\n  return /*#__PURE__*/_jsxDEV(\"select\", {\n    id: id,\n    name: name,\n    title: title // defaultValue={setValue}\n    ,\n    onChange: () => {\n      console.log(\"select Change!! : \", setValue);\n      setter(setValue);\n    },\n    children: options.map((option, i) => {\n      let isSelect = option.value == setValue ? \"selected\" : \"\"; //let isSelect = option.value == setValue;\n\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: option.value,\n        selected: isSelect,\n        children: option.label\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n}\n\n_c = EgovSelect;\nexport default EgovSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"EgovSelect\");","map":{"version":3,"sources":["C:/Users/Tiflis/Documents/eGovFrameDev-4.0.0-64bit/workspace/newcc/egovframe-template-simple-react/src/egov/common/EgovSelect.jsx"],"names":["React","useState","EgovSelect","id","name","title","options","setValue","setter","console","log","map","option","i","isSelect","value","label"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,UAAT,OAAoE;AAAA,MAAhD;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,IAAN;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA,OAAnB;AAA4BC,IAAAA,QAA5B;AAAsCC,IAAAA;AAAtC,GAAgD;AAChEC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BP,EAA1B,EAA8BC,IAA9B,EAAoCC,KAApC,EAA2CC,OAA3C,EAAoDC,QAApD,EAA8DC,MAA9D;AACA,sBACI;AACI,IAAA,EAAE,EAAEL,EADR;AAEI,IAAA,IAAI,EAAEC,IAFV;AAGI,IAAA,KAAK,EAAEC,KAHX,CAII;AAJJ;AAKI,IAAA,QAAQ,EAAE,MAAM;AACZI,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCH,QAAlC;AACAC,MAAAA,MAAM,CAACD,QAAD,CAAN;AACH,KARL;AAAA,cAUKD,OAAO,CAACK,GAAR,CAAY,CAACC,MAAD,EAASC,CAAT,KAAe;AACxB,UAAIC,QAAQ,GAAGF,MAAM,CAACG,KAAP,IAAgBR,QAAhB,GAA2B,UAA3B,GAAwC,EAAvD,CADwB,CAExB;;AACA,0BACI;AAEI,QAAA,KAAK,EAAEK,MAAM,CAACG,KAFlB;AAGI,QAAA,QAAQ,EAAED,QAHd;AAAA,kBAKKF,MAAM,CAACI;AALZ,SACSH,CADT;AAAA;AAAA;AAAA;AAAA,cADJ;AAQH,KAXA;AAVL;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH;;KA3BQX,U;AA6BT,eAAeA,UAAf","sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction EgovSelect({ id, name, title, options, setValue, setter }) {\r\n    console.log(\"egovSelect\", id, name, title, options, setValue, setter);\r\n    return (\r\n        <select\r\n            id={id}\r\n            name={name}\r\n            title={title}\r\n            // defaultValue={setValue}\r\n            onChange={() => {\r\n                console.log(\"select Change!! : \", setValue);\r\n                setter(setValue)\r\n            }}>\r\n\r\n            {options.map((option, i) => {\r\n                let isSelect = option.value == setValue ? \"selected\" : \"\";\r\n                //let isSelect = option.value == setValue;\r\n                return (\r\n                    <option\r\n                        key={i}\r\n                        value={option.value}\r\n                        selected={isSelect}\r\n                    >\r\n                        {option.label}\r\n                    </option>)\r\n            })}\r\n        </select>\r\n    );\r\n}\r\n\r\nexport default EgovSelect;"]},"metadata":{},"sourceType":"module"}